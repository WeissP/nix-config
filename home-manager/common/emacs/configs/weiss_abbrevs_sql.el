(with-eval-after-load 'sql-mode
  (when (boundp 'sql-mode-abbrev-table)
    (clear-abbrev-table sql-mode-abbrev-table))

  (define-abbrev-table 'sql-mode-abbrev-table
    '(
      ("EXISTS" "EXISTS (\nSELECT *\nFROM ▮\nWHERE\n)" weiss--ahf-indent)
      ("all" "ALL" weiss--ahf)
      ("and" "AND ")
      ("art" "$▮::text[]")
      ("aru" "UNNEST(▮)")
      ("as" "AS ")
      ("at" "ALTER TABLE ▮" weiss--ahf)
      ("av" "AVG(▮)" weiss--ahf)
      ("case" "CASE\nWHEN ▮THEN\nWHEN THEN\nELSE\nEND" weiss--ahf-indent)
      ("co" "COALESCE(▮)" weiss--ahf)
      ("ct" "COUNT(*▮)" weiss--ahf)
      ("di" "DISTINCT " weiss--ahf)
      ("dt" "DROP TABLE ▮" weiss--ahf)
      ("elsif" "ELSIF ▮ THEN" weiss--ahf)
      ("ex" "EXISTS" weiss--ahf)
      ("from" "FROM ")
      ("gb" "GROUP BY ")
      ("if" "IF ▮ THEN\n\nEND IF;" weiss--ahf-indent)
      ("ii" "INSERT INTO ▮" weiss--ahf)
      ("iiv" "INSERT INTO ▮() VALUES\n()" weiss--ahf-indent)
      ("in" "IN ")    
      ("into" "INTO ")
      ("j" "INNER JOIN ▮ ON " weiss--ahf)
      ("li" "LIMIT 10" weiss--ahf)
      ("llj" "LEFT OUTER JOIN ▮ ON " weiss--ahf)
      ("lrj" "RIGHT OUTER JOIN ▮ ON " weiss--ahf)
      ("max" "MAX(▮)" weiss--ahf)
      ("min" "MIN(▮)" weiss--ahf)
      ("nf" "CREATE OR REPLACE FUNCTION ▮ ()\nRETURNS  AS $$\nDECLARE\nBEGIN\n\nRETURN;\nEND; $$ LANGUAGE plpgsql;\n" weiss--ahf-indent)
      ("not" "NOT ")
      ("np" "CREATE OR REPLACE PROCEDURE ▮ ()\n LANGUAGE plpgsql; AS $$\nDECLARE\nBEGIN\n\nRETURN;\nEND; $$\n" weiss--ahf-indent)
      ("nt" "CREATE TABLE ▮ \n(\n\n);" weiss--ahf-indent)
      ("ntr" "CREATE TRIGGER ▮ \nBEFORE INSERT ON \nFOR EACH ROW \nEXECUTE PROCEDURE ;" weiss--ahf-indent)
      ("nv" "CREATE VIEW ▮ AS\n(\n\n);" weiss--ahf-indent)
      ("ob" "ORDER BY ")
      ("or" "OR ")
      ("ov" "OVER (▮) AS" weiss--ahf)
      ("pb" "PARTITION BY ")
      ("rn" "RAISE NOTICE '▮'" weiss--ahf)
      ("rt" "RETURNING ")
      ("sf" "SELECT \nFROM ▮" weiss--ahf-indent)
      ("sfw" "SELECT \nFROM ▮\nWHERE " weiss--ahf-indent)
      ("si" "SELECT ▮ INTO")
      ("sl" "SELECT ")
      ("ss" "SELECT * FROM ▮" weiss--ahf)
      ("sum" "SUM(▮)" weiss--ahf)
      ("then" "THEN " weiss--ahf-indent)
      ("hv" "HAVING " weiss--ahf-indent)
      ("ua" "UNION ALL ")
      ("un" "UNION ")
      ("up" "UPDATE ▮ SET WHERE;" weiss--ahf)
      ("wh" "WHERE ")
      ("when" "WHEN " weiss--ahf-indent)
      ("where" "WHERE ")
      ("with" "WITH ▮ AS (\n\n)" weiss--ahf-indent)
      ("withr" "WITH RECURSIVE ▮ () \nAS (\n\nUnion ALL\n\n)" weiss--ahf-indent)
      ("ocn" "ON CONFLICT (▮) DO NOTHING" weiss--ahf-indent)
      ("ocu" "ON CONFLICT (▮) DO UPDATE SET = EXCLUDED." weiss--ahf-indent)
      )
    )
  )

(provide 'weiss_abbrevs_sql)
